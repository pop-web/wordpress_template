/*
  given a DOM element, return the list of all scroll parents, up the list of ancesors
  until we get to the top window object. This list is what we attach scroll listeners
  to, because if any of these parent elements scroll, we'll need to re-calculate the
  reference element's position.
  */

/* harmony import */

/* istanbul ignore if */

/* webpack/runtime/compat get default export */

/*!
  * Bootstrap v5.1.3 (https://getbootstrap.com/)
  * Copyright 2011-2021 The Bootstrap Authors (https://github.com/twbs/bootstrap/graphs/contributors)
  * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)
  */

/*#__PURE__*/

/**
   * ------------------------------------------------------------------------
   * Class Definition
   * ------------------------------------------------------------------------
   */

/**
   * ------------------------------------------------------------------------
   * Constants
   * ------------------------------------------------------------------------
   */

/**
   * ------------------------------------------------------------------------
   * Data Api implementation
   * ------------------------------------------------------------------------
   */

/**
   * ------------------------------------------------------------------------
   * Private methods
   * ------------------------------------------------------------------------
   */

/**
   * ------------------------------------------------------------------------
   * jQuery
   * ------------------------------------------------------------------------
   * add .Alert to jQuery only if jQuery is present
   */

/**
   * ------------------------------------------------------------------------
   * jQuery
   * ------------------------------------------------------------------------
   * add .Button to jQuery only if jQuery is present
   */

/**
   * ------------------------------------------------------------------------
   * jQuery
   * ------------------------------------------------------------------------
   * add .Carousel to jQuery only if jQuery is present
   */

/**
   * ------------------------------------------------------------------------
   * jQuery
   * ------------------------------------------------------------------------
   * add .Collapse to jQuery only if jQuery is present
   */

/**
   * ------------------------------------------------------------------------
   * jQuery
   * ------------------------------------------------------------------------
   * add .Dropdown to jQuery only if jQuery is present
   */

/**
   * ------------------------------------------------------------------------
   * jQuery
   * ------------------------------------------------------------------------
   * add .Modal to jQuery only if jQuery is present
   */

/**
   * ------------------------------------------------------------------------
   * jQuery
   * ------------------------------------------------------------------------
   * add .Popover to jQuery only if jQuery is present
   */

/**
   * ------------------------------------------------------------------------
   * jQuery
   * ------------------------------------------------------------------------
   * add .ScrollSpy to jQuery only if jQuery is present
   */

/**
   * ------------------------------------------------------------------------
   * jQuery
   * ------------------------------------------------------------------------
   * add .Tab to jQuery only if jQuery is present
   */

/**
   * ------------------------------------------------------------------------
   * jQuery
   * ------------------------------------------------------------------------
   * add .Toast to jQuery only if jQuery is present
   */

/**
   * ------------------------------------------------------------------------
   * jQuery
   * ------------------------------------------------------------------------
   * add .Tooltip to jQuery only if jQuery is present
   */

/**
   * ------------------------------------------------------------------------
   * jQuery
   * ------------------------------------------------------------------------
   */

/**
   * --------------------------------------------------------------------------
   * Bootstrap (v5.1.3): alert.js
   * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)
   * --------------------------------------------------------------------------
   */

/**
   * --------------------------------------------------------------------------
   * Bootstrap (v5.1.3): button.js
   * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)
   * --------------------------------------------------------------------------
   */

/**
   * --------------------------------------------------------------------------
   * Bootstrap (v5.1.3): collapse.js
   * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)
   * --------------------------------------------------------------------------
   */

/**
   * --------------------------------------------------------------------------
   * Bootstrap (v5.1.3): dom/data.js
   * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)
   * --------------------------------------------------------------------------
   */

/**
   * --------------------------------------------------------------------------
   * Bootstrap (v5.1.3): dom/manipulator.js
   * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)
   * --------------------------------------------------------------------------
   */

/**
   * --------------------------------------------------------------------------
   * Bootstrap (v5.1.3): dom/selector-engine.js
   * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)
   * --------------------------------------------------------------------------
   */

/**
   * --------------------------------------------------------------------------
   * Bootstrap (v5.1.3): dropdown.js
   * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)
   * --------------------------------------------------------------------------
   */

/**
   * --------------------------------------------------------------------------
   * Bootstrap (v5.1.3): modal.js
   * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)
   * --------------------------------------------------------------------------
   */

/**
   * --------------------------------------------------------------------------
   * Bootstrap (v5.1.3): offcanvas.js
   * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)
   * --------------------------------------------------------------------------
   */

/**
   * --------------------------------------------------------------------------
   * Bootstrap (v5.1.3): popover.js
   * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)
   * --------------------------------------------------------------------------
   */

/**
   * --------------------------------------------------------------------------
   * Bootstrap (v5.1.3): scrollspy.js
   * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)
   * --------------------------------------------------------------------------
   */

/**
   * --------------------------------------------------------------------------
   * Bootstrap (v5.1.3): tab.js
   * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)
   * --------------------------------------------------------------------------
   */

/**
   * --------------------------------------------------------------------------
   * Bootstrap (v5.1.3): toast.js
   * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)
   * --------------------------------------------------------------------------
   */

/**
   * --------------------------------------------------------------------------
   * Bootstrap (v5.1.3): tooltip.js
   * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)
   * --------------------------------------------------------------------------
   */

/**
   * --------------------------------------------------------------------------
   * Bootstrap (v5.1.3): util/backdrop.js
   * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)
   * --------------------------------------------------------------------------
   */

/**
   * --------------------------------------------------------------------------
   * Bootstrap (v5.1.3): util/component-functions.js
   * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)
   * --------------------------------------------------------------------------
   */

/**
   * --------------------------------------------------------------------------
   * Bootstrap (v5.1.3): util/focustrap.js
   * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)
   * --------------------------------------------------------------------------
   */

/**
   * --------------------------------------------------------------------------
   * Bootstrap (v5.1.3): util/index.js
   * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)
   * --------------------------------------------------------------------------
   */

/**
   * --------------------------------------------------------------------------
   * Bootstrap (v5.1.3): util/sanitizer.js
   * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)
   * --------------------------------------------------------------------------
   */

/**
   * --------------------------------------------------------------------------
   * Bootstrap (v5.1.3): util/scrollBar.js
   * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)
   * --------------------------------------------------------------------------
   */

/** Static */

/************************************************************************/

/******/

/***/

//     scaleX = rect.width / offsetWidth || 1;

//     scaleY = rect.height / offsetHeight || 1;

//    - If key is not up or down => not a dropdown command

//    - If trigger inside the menu => not a dropdown command

//   // Do not attempt to divide by 0, otherwise we get `Infinity` as scale

//   // Fallback to 1 in case both values are `0`

//   const offsetHeight = element.offsetHeight;

//   const offsetWidth = element.offsetWidth;

//   if (offsetHeight > 0) {

//   if (offsetWidth > 0) {

//   }

//  - And not a key in REGEXP_KEYDOWN => not a dropdown command

//  - If key is other than escape

//  - If space key => not a dropdown command

// $FlowFixMe[cannot-write]

// $FlowFixMe[incompatible-call]: HTMLElement is a Node

// $FlowFixMe[incompatible-call]: isBody tells us target will be an HTMLElement here

// $FlowFixMe[incompatible-cast]: force type refinement, we compare offsetParent with window above, but Flow doesn't detect it

// $FlowFixMe[incompatible-return]

// $FlowFixMe[incompatible-return]: assume body is always available

// $FlowFixMe[incompatible-return]: https://github.com/facebook/flow/issues/1414

// $FlowFixMe[incompatible-type]: Flow seems to have problems with two array unions...

// $FlowFixMe[prop-missing]

// $FlowFixMe[prop-missing]: need a better way to handle this...

// 'static' option will be translated to true, and booleans will keep their value

// (as if it's the second time we tap on it, mouseenter compat event

// ----------------------------------------------------------------------

// 0.001

// @deprecated

// A "clipping parent" is an overflowable container with the characteristic of

// A trick to recreate a tooltip in case a new title is given by using the NOT documented `data-bs-original-title`

// Also, `html.clientHeight` adds the bottom bar height in Safari iOS, even

// Async and optimistically optimized update – it will not be executed if

// Browsers where the left scrollbar doesn't cause an issue report `0` for

// CSS selector

// Can find the shadow root otherwise it'll return the document

// Check if a regular expression validates the attribute.

// Check if module is in cache

// Coerce string values

// Composite means it takes into account transforms as well as layout.

// Create a new module (and put it into the cache)

// DOM Element detected

// Disable Popper if we have a static display

// Don't call next when the page isn't visible

// Don't move modal's DOM position

// Don't proceed if `reference` or `popper` are not valid elements

// Events storage

// Execute the module function

// FIXME:

// Fallback here: "Not Safari" userAgent

// Feature detection fails in mobile emulation mode in Chrome.

// Firefox wants us to check `-x` and `-y` variations as well

// First, attempt with faster native method

// Fixes https://github.com/popperjs/popper-core/issues/1223

// Flow doesn't support to extend this property, but it's the most

// For high frequency updates (e.g. `resize` and `scroll` events), always

// Get transition-duration of the element

// Gets the closest ancestor positioned element. Handles some edge cases,

// Gets the maximum area that the element is visible in due to any number of

// Getters

// Give up, the result is false

// Global attributes allowed on any supplied element below.

// Handle special case when .nav-link is inside .nav-item

// IE 11 has no ShadowRoot

// IE11 does not support Object.values

// If <html> has a CSS width greater than the viewport, then this will be

// If input/textarea:

// If it's a touch-enabled device, mouseenter/leave are fired as

// If multiple durations are defined, take the first

// If not input/textarea:

// If this is a touch-enabled device we add extra

// If this is a touch-enabled device we remove the extra

// In Chrome, it returns a value very close to 0 (+/-) but contains rounding

// In the future can be replaced with:

// Just in case some CMS puts out a full URL with the anchor appended

// Math.abs(win.innerWidth / visualViewport.scale - visualViewport.width) <

// Method argument is left, for Alert and only, as it doesn't implement the 'hide' method

// Modifiers have the ability to execute arbitrary code before the first

// Modifiers have the ability to reset the current update cycle. The

// NB: This isn't supported on iOS <= 12. If the keyboard is open, the popper

// Offsets are the actual position the popper needs to have to be

// Offsets can be applied only to the popper element

// On each update cycle, the `modifiersData` property for each modifier

// On visiting object, check for its dependencies and visit them recursively

// Orders the modifiers based on their dependencies and `phase`

// Overrides

// Popper 1 is broken in this case and never had a bug report so let's assume

// Popper virtual elements require a getBoundingClientRect method

// Private

// Protected

// Public

// Return 0 if element or transition duration is not found

// Return the exports of the module

// Returns the composite rect of an element relative to its offsetParent.

// Round the offsets to the nearest suitable subpixel based on the DPR.

// Safari returns a number <= 0, usually < -1 when pinch-zoomed

// See https://github.com/twbs/bootstrap/issues/32273

// Set triggered links parents as active

// ShadowRoot detected

// Simplest case: handler is passed, remove that listener ONLY.

// Some weirdness is happening, so we bail

// Static

// Store the reference and popper rects to be read by modifiers

// Strip out disabled modifiers

// Sync update – it will always be executed, even if not necessary. This

// Tab navigation through the dropdown menu or events from contained inputs shouldn't close the menu

// The element to trap focus inside of

// The module cache

// The only valid content that could double as a selector are IDs or classes,

// The require function

// This entry need to be wrapped in an IIFE because it need to be in strict mode.

// This is non-exhaustive but covers the most common CSS properties that

// This is the most basic placement, and will be adjusted by

// This will be removed later in favor of a `setContent` method

// To ensure persistent data, use `${name}#persistent`

// To please ESLint

// Toggle class and sync the `aria-pressed` attribute with the return value of the `.toggle()` method

// Totally disable Popper for Dropdowns in Navbar

// Use the clientRect sizes if it's not been transformed.

// Uses Layout Viewport (like Chrome; Safari does not currently)

// Validate the provided modifiers so that the consumer will get warned

// We need to trim the value because custom properties can also include spaces

// With both <ul> and <nav> markup a parent is the previous sibling of any nav ancestor

// Zooming can change the DPR, but it seems to report a value that will

// `.offsetParent` reports `null` for fixed elements, while absolute elements

// `2` may be desired in some cases – research later

// `Object.fromEntries(keysWithDifferentValues)`

// `document.querySelector` will rightfully complain it is invalid.

// `initial`

// `offsetWidth` returns an integer while `getBoundingClientRect`

// add listener on the first call when the document is in loading state

// allow cycling to get the last item in case key equals ARROW_UP_KEY

// allow to get the native events from namespaced events ('click.bs.button' --> 'click')

// and applies them to the HTMLElements such as popper and arrow

// anymore

// anyway.

// arrow is optional + virtual elements

// avoid conflict when clicking a toggler of an offcanvas, while another is open

// avoid conflict when clicking moddal toggler while another one is open

// can be obscured underneath it.

// can be removed later when multiple key/instances are fine to be used

// check for visited object

// cleanly divide the values into the appropriate subpixels.

// clipping (or hiding) overflowing elements with a position different from

// clipping parents

// const keysWithDifferentValues = Object.entries(this._config).filter(entry => this.constructor.Default[entry[0]] !== this._config[entry[0]])

// content is a DOM node or a jQuery

// create a containing block.

// cycle. This is useful when a modifier adds some persistent data that

// define getter functions for harmony exports

// effective way to apply styles to an HTMLElement

// empty mouseover listeners to the body's immediate children;

// empty mouseover listeners we added for iOS support

// ensure swiping with one touch and not pinching

// errors due to floating point numbers, so we need to check precision.

// eslint-disable-next-line import/no-unused-modules

// eslint-disable-next-line no-unused-expressions

// eslint-disable-next-line unused-imports/no-unused-vars

// events to fire) we explicitly restart cycling

// focus on trigger when it is closed

// free up element references if there are no instances left for an element

// getDefaultExport function for compatibility with non-harmony modules

// give padding to element to balance the hidden scrollbar width

// give the choice to place backdrop under different elements

// guard against infinite focus loop

// here, we listen for touchend, explicitly pause the carousel

// https://developer.mozilla.org/en-US/docs/Web/API/Window/innerWidth#usage_notes

// https://developer.mozilla.org/en-US/docs/Web/CSS/Containing_block#identifying_the_containing_block

// https://github.com/popperjs/popper-core/issues/1078

// https://github.com/popperjs/popper-core/issues/837

// https://www.quirksmode.org/blog/archives/2014/02/mouse_event_bub.html

// if (isHTMLElement(element) && includeScale) {

// if false, we use the backdrop helper without adding any element to the dom

// if it isn't open, so if this isn't available, the popper will be detected

// if target isn't included in items (e.g. when expanding the dropdown)

// if the element does not exist in the list return an element depending on the direction and if cycle is allowed

// import { isHTMLElement } from './instanceOf';

// in case of mouseenter or mouseleave wrap the handler within a function that checks for its DOM position

// incorrect for RTL.

// is NOT fired) and after a timeout (to allow for mouse compatibility

// is filled with the initial data specified by the modifier. This means

// is useful for low frequency updates where sync behavior simplifies the

// it doesn't persist and is fresh on each update.

// it's not an issue. I don't think anyone ever specifies width on <html>

// logic was previously ran for the previous placement and is therefore

// logic.

// make it clear we only want one instance per element

// means it doesn't take into account transforms.

// merge custom information in our event

// most common use case for this is the `flip` modifier changing the

// no module.id needed

// no module.loaded needed

// non-1 when it should be for elements that aren't a full pixel in

// not necessary (debounced to run at most once-per-tick)

// of the `<html>` and `<body>` rect bounds if horizontally scrollable

// one.

// only needed because of broken event delegation on iOS

// or the carousel or its parent isn't visible

// order based on dependencies

// order based on phase

// other modifiers need to use, but the modifier is run after the dependent

// part of the mouse compatibility events on first tap - the carousel

// placement, which then needs to re-run all the modifiers, because the

// prefer the async Popper#update method

// preventDefault only for <a> elements (which change the URL) not inside the collapsible element

// private

// properly positioned near its reference element

// properties

// return if the following background transition hasn't yet completed

// return the containing block

// returns a float. This results in `scaleX` or `scaleY` being

// so everything starting with `#` or `.`. If a "real" URL is used as the selector,

// stale/incorrect

// step into the shadow DOM of the parent of a slotted node

// such as table ancestors and cross browser bugs.

// the following methods are used to handle overflowing modals

// the modifiers in the next step

// this (e.g. Edge 2019, IE11, Safari)

// this is a quicker (but less type safe) way to save quite some bytes from the bundle

// this prevents the handler from being dispatched the same way as mouseover or mouseout does

// to overflow the bottom of the screen too early.

// trick: We adjust positive paddingRight and negative marginRight to sticky-top elements to keep showing fullwidth

// update cycle runs. They will be executed in the same order as the update

// use getElement() with the default "body" to get a fresh Element on each instantiation

// we use append for html objects to maintain js events

// webpackBootstrap

// when we don't find a shadow root

// width or height.

// would stop cycling until user tapped out of it;

// }

//# sourceMappingURL=bootstrap.bundle.js.map
